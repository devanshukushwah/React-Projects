{"ast":null,"code":"const reducer = (state, action) => {\n  if (action.type === \"GET_TOTAL\") {\n    let {\n      total,\n      amount\n    } = state.cart.reduce((cardTotal, cardItem) => {\n      const {\n        price,\n        amount\n      } = cardItem;\n      cardTotal.amount += amount;\n      cardTotal.total += amount * price;\n      return cardTotal;\n    }, {\n      total: 0,\n      amount: 0\n    });\n    total = parseFloat(total.toFixed(2));\n    return { ...state,\n      amount,\n      total\n    };\n  }\n\n  if (action.type === \"CLEAR_CART\") {\n    return { ...state,\n      cart: []\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const newCart = state.cart.filter(cardItem => cardItem.id !== action.payload);\n    return { ...state,\n      cart: newCart\n    };\n  }\n\n  if (action.type === \"INCREASE\") {\n    let tempCart = state.cart.map(item => {\n      if (item.id === action.payload) {\n        return { ...item,\n          amount: item.amount + 1\n        };\n      }\n\n      return item;\n    });\n    return { ...state,\n      cart: tempCart\n    };\n  }\n\n  if (action.type === \"DECREASE\") {\n    let tempCart = state.cart.map(item => {\n      if (item.id === action.payload) {\n        return { ...item,\n          amount: item.amount - 1\n        };\n      }\n\n      return item;\n    }).filter(item => item.amount !== 0);\n    return { ...state,\n      cart: tempCart\n    };\n  }\n\n  if (action.type === \"LOADING\") {\n    return { ...state,\n      loading: true\n    };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/home/devanshu/Desktop/React-Projects/14.cart/src/reducer.js"],"names":["reducer","state","action","type","total","amount","cart","reduce","cardTotal","cardItem","price","parseFloat","toFixed","newCart","filter","id","payload","tempCart","map","item","loading"],"mappings":"AAAA,MAAMA,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,MAAIA,MAAM,CAACC,IAAP,KAAgB,WAApB,EAAiC;AAC/B,QAAI;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAoBJ,KAAK,CAACK,IAAN,CAAWC,MAAX,CACtB,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AACvB,YAAM;AAAEC,QAAAA,KAAF;AAASL,QAAAA;AAAT,UAAoBI,QAA1B;AACAD,MAAAA,SAAS,CAACH,MAAV,IAAoBA,MAApB;AACAG,MAAAA,SAAS,CAACJ,KAAV,IAAmBC,MAAM,GAAGK,KAA5B;AACA,aAAOF,SAAP;AACD,KANqB,EAOtB;AACEJ,MAAAA,KAAK,EAAE,CADT;AAEEC,MAAAA,MAAM,EAAE;AAFV,KAPsB,CAAxB;AAaAD,IAAAA,KAAK,GAAGO,UAAU,CAACP,KAAK,CAACQ,OAAN,CAAc,CAAd,CAAD,CAAlB;AAEA,WAAO,EAAE,GAAGX,KAAL;AAAYI,MAAAA,MAAZ;AAAoBD,MAAAA;AAApB,KAAP;AACD;;AAED,MAAIF,MAAM,CAACC,IAAP,KAAgB,YAApB,EAAkC;AAChC,WAAO,EAAE,GAAGF,KAAL;AAAYK,MAAAA,IAAI,EAAE;AAAlB,KAAP;AACD;;AAED,MAAIJ,MAAM,CAACC,IAAP,KAAgB,QAApB,EAA8B;AAC5B,UAAMU,OAAO,GAAGZ,KAAK,CAACK,IAAN,CAAWQ,MAAX,CACbL,QAAD,IAAcA,QAAQ,CAACM,EAAT,KAAgBb,MAAM,CAACc,OADvB,CAAhB;AAGA,WAAO,EAAE,GAAGf,KAAL;AAAYK,MAAAA,IAAI,EAAEO;AAAlB,KAAP;AACD;;AAED,MAAIX,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,QAAIc,QAAQ,GAAGhB,KAAK,CAACK,IAAN,CAAWY,GAAX,CAAgBC,IAAD,IAAU;AACtC,UAAIA,IAAI,CAACJ,EAAL,KAAYb,MAAM,CAACc,OAAvB,EAAgC;AAC9B,eAAO,EAAE,GAAGG,IAAL;AAAWd,UAAAA,MAAM,EAAEc,IAAI,CAACd,MAAL,GAAc;AAAjC,SAAP;AACD;;AACD,aAAOc,IAAP;AACD,KALc,CAAf;AAMA,WAAO,EAAE,GAAGlB,KAAL;AAAYK,MAAAA,IAAI,EAAEW;AAAlB,KAAP;AACD;;AAED,MAAIf,MAAM,CAACC,IAAP,KAAgB,UAApB,EAAgC;AAC9B,QAAIc,QAAQ,GAAGhB,KAAK,CAACK,IAAN,CACZY,GADY,CACPC,IAAD,IAAU;AACb,UAAIA,IAAI,CAACJ,EAAL,KAAYb,MAAM,CAACc,OAAvB,EAAgC;AAC9B,eAAO,EAAE,GAAGG,IAAL;AAAWd,UAAAA,MAAM,EAAEc,IAAI,CAACd,MAAL,GAAc;AAAjC,SAAP;AACD;;AACD,aAAOc,IAAP;AACD,KANY,EAOZL,MAPY,CAOJK,IAAD,IAAUA,IAAI,CAACd,MAAL,KAAgB,CAPrB,CAAf;AAQA,WAAO,EAAE,GAAGJ,KAAL;AAAYK,MAAAA,IAAI,EAAEW;AAAlB,KAAP;AACD;;AAED,MAAIf,MAAM,CAACC,IAAP,KAAgB,SAApB,EAA+B;AAC7B,WAAO,EAAE,GAAGF,KAAL;AAAYmB,MAAAA,OAAO,EAAE;AAArB,KAAP;AACD;;AACD,SAAOnB,KAAP;AACD,CAzDD;;AA0DA,eAAeD,OAAf","sourcesContent":["const reducer = (state, action) => {\n  if (action.type === \"GET_TOTAL\") {\n    let { total, amount } = state.cart.reduce(\n      (cardTotal, cardItem) => {\n        const { price, amount } = cardItem;\n        cardTotal.amount += amount;\n        cardTotal.total += amount * price;\n        return cardTotal;\n      },\n      {\n        total: 0,\n        amount: 0,\n      }\n    );\n\n    total = parseFloat(total.toFixed(2));\n\n    return { ...state, amount, total };\n  }\n\n  if (action.type === \"CLEAR_CART\") {\n    return { ...state, cart: [] };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const newCart = state.cart.filter(\n      (cardItem) => cardItem.id !== action.payload\n    );\n    return { ...state, cart: newCart };\n  }\n\n  if (action.type === \"INCREASE\") {\n    let tempCart = state.cart.map((item) => {\n      if (item.id === action.payload) {\n        return { ...item, amount: item.amount + 1 };\n      }\n      return item;\n    });\n    return { ...state, cart: tempCart };\n  }\n\n  if (action.type === \"DECREASE\") {\n    let tempCart = state.cart\n      .map((item) => {\n        if (item.id === action.payload) {\n          return { ...item, amount: item.amount - 1 };\n        }\n        return item;\n      })\n      .filter((item) => item.amount !== 0);\n    return { ...state, cart: tempCart };\n  }\n\n  if (action.type === \"LOADING\") {\n    return { ...state, loading: true };\n  }\n  return state;\n};\nexport default reducer;\n"]},"metadata":{},"sourceType":"module"}